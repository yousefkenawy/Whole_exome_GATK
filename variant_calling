#!/bin/bash

# Script to call germline variants in a human WGS paired end reads 2 X 100bp
# Following GATK4 best practices workflow - https://gatk.broadinstitute.org/hc/en-us/articles/360035535932-Germline-short-variant-discovery-SNPs-Indels-
# This script is for demonstration purposes only


# download data
wget -P /home/"yourname"/VC1/reads https://zenodo.org/records/3243160/files/proband_R1.fq.gz
wget -P /home/"yourname"/VC1/reads https://zenodo.org/records/3243160/files/proband_R2.fq.gz


# echo "Run Prep files..."

# ################################################### Prep files (TO BE GENERATED ONLY ONCE) ##########################################################



# # download reference files
#wget -P ~/supporting_files/hg19/ https://zenodo.org/records/3243160/files/hg19_chr8.fa.gz
#gunzip ~/supporting_files/hg19/hg19_chr8.fa.gz

# # index ref - .fai file before running haplotype caller
# samtools faidx ~/supporting_files/hg19/hg19_chr8.fa


# # # ref dict - .dict file before running haplotype caller
# gatk CreateSequenceDictionary R=~/supporting_files/hg19/hg19_chr8.fa O=~/supporting_files/hg19/hg19_chr8.dict


# # # download known sites files for BQSR from GATK resource bundle
# wget -P ~/supporting_files/hg19/ ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/1000G_omni2.5.hg19.sites.vcf.gz
# gunzip: 
# gunzip 1000G_omni2.5.hg19.sites.vcf.gz
# index with :
#gatk IndexFeatureFile -I 1000G_omni2.5.hg19.sites.vcf

# ###################################################### VARIANT CALLING STEPS ####################################################################


# # directories
ref="/home/"yourname"/supporting_files/hg19/hg19_chr8.fa"
known_sites="/home/"yourname"/supporting_files/hg19/1000G_omni2.5.hg19.sites.vcf"
aligned_reads="/home/"yourname"/VC1/aligned_reads"
reads="/home/"yourname"/VC1/reads"
results="/home/"yourname"/VC1/results"
data="/home/"yourname"/VC1/data"




# # -------------------
# # STEP 1: QC - Run fastqc 
# # -------------------

# echo "STEP 1: QC - Run fastqc"

# fastqc ${reads}/proband_R1.fq.gz -o ${reads}/
# fastqc ${reads}/proband_R2.fq.gz -o ${reads}/

# # No trimming required, quality looks okay.


# # --------------------------------------
# # STEP 2: Map to reference using BWA-MEM
# # --------------------------------------

#echo "STEP 2: Map to reference using BWA-MEM"

# BWA index reference 
#bwa index ${ref}


# BWA alignment
#bwa mem -t 4 -R "@RG\tID:proband\tPL:ILLUMINA\tSM:proband" ${ref} ${reads}/proband_R1.fq.gz ${reads}/proband_R2.fq.gz > ${aligned_reads}/proband.paired.sam

# samtools view proband.paired.sam | less
# samtools flagstats proband.paired.sam

# # -----------------------------------------
# # STEP 3: Mark Duplicates and Sort - GATK4
# # -----------------------------------------

# echo "STEP 3: Mark Duplicates and Sort - GATK4"

# gatk MarkDuplicatesSpark -I ${aligned_reads}/proband.paired.sam -O ${aligned_reads}/proband_sorted_dedup_reads.bam

# samtools flagstats proband_sorted_dedup_reads.bam

# needs java 1.8

# # ----------------------------------
# # STEP 4: Base quality recalibration
# # ----------------------------------


# echo "STEP 4: Base quality recalibration"

# # 1. build the model
# gatk BaseRecalibrator -I /home/"yourname"/VC1/aligned_reads/proband_sorted_dedup_reads.bam -R /home/"yourname"/supporting_files/hg19/hg19_chr8.fa --known-sites 1000G_omni2.5.hg19.sites.vcf -O recal_test.table

# gatk BaseRecalibrator -I ${aligned_reads}/proband_sorted_dedup_reads.bam -R ${ref} --known-sites ${known_sites} -O ${data}/recal_data.table


# # 2. Apply the model to adjust the base quality scores
# gatk ApplyBQSR -I ${aligned_reads}/proband_sorted_dedup_reads.bam -R ${ref} --bqsr-recal-file ${data}/recal_data.table -O ${aligned_reads}/proband_sorted_dedup_bqsr_reads.bam 



# # -----------------------------------------------
# # STEP 5: Collect Alignment & Insert Size Metrics
# # -----------------------------------------------


# echo "STEP 5: Collect Alignment & Insert Size Metrics"

#gatk CollectAlignmentSummaryMetrics R=${ref} I=${aligned_reads}/proband_sorted_dedup_bqsr_reads.bam O=${aligned_reads}/alignment_metrics.txt
#gatk CollectInsertSizeMetrics INPUT=${aligned_reads}/proband_sorted_dedup_bqsr_reads.bam OUTPUT=${aligned_reads}/insert_size_metrics.txt HISTOGRAM_FILE=${aligned_reads}/insert_size_histogram.pdf



# # ----------------------------------------------
# # STEP 6: Call Variants - gatk haplotype caller
# # ----------------------------------------------

# echo "STEP 6: Call Variants - gatk haplotype caller"

# gatk HaplotypeCaller -R ${ref} -I ${aligned_reads}/proband_sorted_dedup_bqsr_reads.bam -O ${results}/raw_variants.vcf



# # extract SNPs & INDELS

gatk SelectVariants -R ${ref} -V ${results}/raw_variants.vcf --select-type SNP -O ${results}/raw_snps.vcf
gatk SelectVariants -R ${ref} -V ${results}/raw_variants.vcf --select-type INDEL -O ${results}/raw_indels.vcf

